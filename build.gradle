// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
  ext.versions = [
          'kotlin': '1.4.10',
          'core_ctx': '1.3.2',
          'lifecycle': '2.2.0',
          'navigation': '2.3.1',
          'glide': '4.11.0',
          'rx': '3.0.0',
          'logging_interceptor': '4.9.0',
          'work': '2.4.0',
          'arch': '2.1.0',
          'appcompat': '1.2.0',
          'material': '1.2.1',
          'constraint': '2.0.4',
          'vectordrawable': '1.1.0',
          'recycler': '1.1.0',
          'retrofit': '2.6.4',
          'gson': '2.8.0',
          'junit': '4.13',
          'truth': '1.0.1',
          'room': '2.3.0-alpha03',
          'dagger': '2.29.1',
  ]
  repositories {
    google()
    jcenter()
    //maven { url "https://kotlin.bintray.com/kotlinx" }
  }
  dependencies {
    classpath "com.android.tools.build:gradle:4.1.1"
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"

    // NOTE: Do not place your application dependencies here; they belong
    // in the individual module build.gradle files
  }
}
plugins {
  id("io.gitlab.arturbosch.detekt").version("1.15.0-RC1")
}
detekt {
  input = files(                                        // The directories where detekt looks for source files. Defaults to `files("src/main/java", "src/main/kotlin")`.
          "app/src/main/java"
  )
  failFast = true // fail build on any finding
  buildUponDefaultConfig = true // preconfigure defaults
  config = files("$projectDir/config/detekt.yml") // point to your custom config defining rules to run, overwriting default behavior
  //baseline = file("$projectDir/config/baseline.xml") // a way of suppressing issues before introducing detekt

  reports {
    txt{
      enabled = true // similar to the console output, contains issue signature to manually edit baseline files
      destination = file("./detekt.txt")
    }

  }
}
tasks.detekt.jvmTarget = "1.8"
allprojects {
  repositories {
    google()
    jcenter()
  }
}

task clean(type: Delete) {
  delete rootProject.buildDir
}